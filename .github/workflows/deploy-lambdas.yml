name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Find all Lambda directories
      id: find_dirs
      run: |
        dirs=$(find ./lambdas -mindepth 1 -maxdepth 1 -type d)
        echo "::set-output name=dirs::$dirs"

    - name: Zip and upload each Lambda
      run: |
        for dir in ${{ steps.find_dirs.outputs.dirs }}; do
          lambda_name=$(basename "$dir")
          zip_name="$lambda_name.zip"
          cd "$dir"
          zip -r "../$zip_name" .
          cd ..
          aws s3 cp "$zip_name" s3://${{ secrets.S3_BUCKET_NAME }}/"$zip_name"
        done
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Update Lambda function code
      run: |
        for dir in ${{ steps.find_dirs.outputs.dirs }}; do
          lambda_name=$(basename "$dir")
          zip_name="$lambda_name.zip"
          aws lambda update-function-code --function-name "$lambda_name" --s3-bucket ${{ secrets.S3_BUCKET_NAME }} --s3-key "$zip_name"
        done
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Wait for Lambda update to complete
      run: sleep 60

    - name: Update Lambda environment variables
      run: |
        for dir in ${{ steps.find_dirs.outputs.dirs }}; do
          lambda_name=$(basename "$dir")
          aws lambda update-function-configuration --function-name "$lambda_name" --environment "Variables={DB_HOST=${{ secrets.DB_HOST }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_NAME=${{ secrets.DB_NAME }}}"
        done
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}